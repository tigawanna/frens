// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator nexusPrisma {
   provider = "nexus-prisma"

}

model User {
   id String @id @default(ulid())  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  email         String    @unique
  name          String?
  password      String    // Hashed password
  refreshTokens Token[]   // Relation to refresh tokens
  sessions      Session[]
}

model Token {
  id String @id @default(ulid())  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  type      String   // e.g., "REFRESH"
  value     String   @unique // The actual token value (hashed)
  expires   DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
}

model Session {
  id String @id @default(ulid())  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expires   DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  
  // Additional session data if needed
  ipAddress String?
  userAgent String?
}
