/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as ProfileLayoutImport } from './routes/profile/layout'
import { Route as AuthLayoutImport } from './routes/auth/layout'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as FrensIndexImport } from './routes/frens/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthForgortPasswordImport } from './routes/auth/forgort-password'
import { Route as ProfileAccountIndexImport } from './routes/profile/account/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const ProfileLayoutRoute = ProfileLayoutImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProfileLayoutRoute,
} as any)

const FrensIndexRoute = FrensIndexImport.update({
  id: '/frens/',
  path: '/frens/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthForgortPasswordRoute = AuthForgortPasswordImport.update({
  id: '/forgort-password',
  path: '/forgort-password',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const ProfileAccountIndexRoute = ProfileAccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => ProfileLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLayoutImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth/forgort-password': {
      id: '/auth/forgort-password'
      path: '/forgort-password'
      fullPath: '/auth/forgort-password'
      preLoaderRoute: typeof AuthForgortPasswordImport
      parentRoute: typeof AuthLayoutImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthLayoutImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/frens/': {
      id: '/frens/'
      path: '/frens'
      fullPath: '/frens'
      preLoaderRoute: typeof FrensIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof ProfileLayoutImport
    }
    '/profile/account/': {
      id: '/profile/account/'
      path: '/account'
      fullPath: '/profile/account'
      preLoaderRoute: typeof ProfileAccountIndexImport
      parentRoute: typeof ProfileLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteChildren {
  AuthForgortPasswordRoute: typeof AuthForgortPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthForgortPasswordRoute: AuthForgortPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface ProfileLayoutRouteChildren {
  ProfileIndexRoute: typeof ProfileIndexRoute
  ProfileAccountIndexRoute: typeof ProfileAccountIndexRoute
}

const ProfileLayoutRouteChildren: ProfileLayoutRouteChildren = {
  ProfileIndexRoute: ProfileIndexRoute,
  ProfileAccountIndexRoute: ProfileAccountIndexRoute,
}

const ProfileLayoutRouteWithChildren = ProfileLayoutRoute._addFileChildren(
  ProfileLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/profile': typeof ProfileLayoutRouteWithChildren
  '/about': typeof AboutRoute
  '/auth/forgort-password': typeof AuthForgortPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/admin': typeof AdminIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/frens': typeof FrensIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/profile/account': typeof ProfileAccountIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/forgort-password': typeof AuthForgortPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/admin': typeof AdminIndexRoute
  '/auth': typeof AuthIndexRoute
  '/frens': typeof FrensIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/profile/account': typeof ProfileAccountIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/profile': typeof ProfileLayoutRouteWithChildren
  '/about': typeof AboutRoute
  '/auth/forgort-password': typeof AuthForgortPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/admin/': typeof AdminIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/frens/': typeof FrensIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/profile/account/': typeof ProfileAccountIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/profile'
    | '/about'
    | '/auth/forgort-password'
    | '/auth/signup'
    | '/admin'
    | '/auth/'
    | '/frens'
    | '/profile/'
    | '/profile/account'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth/forgort-password'
    | '/auth/signup'
    | '/admin'
    | '/auth'
    | '/frens'
    | '/profile'
    | '/profile/account'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/profile'
    | '/about'
    | '/auth/forgort-password'
    | '/auth/signup'
    | '/admin/'
    | '/auth/'
    | '/frens/'
    | '/profile/'
    | '/profile/account/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  ProfileLayoutRoute: typeof ProfileLayoutRouteWithChildren
  AboutRoute: typeof AboutRoute
  AdminIndexRoute: typeof AdminIndexRoute
  FrensIndexRoute: typeof FrensIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  ProfileLayoutRoute: ProfileLayoutRouteWithChildren,
  AboutRoute: AboutRoute,
  AdminIndexRoute: AdminIndexRoute,
  FrensIndexRoute: FrensIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/profile",
        "/about",
        "/admin/",
        "/frens/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth/layout.tsx",
      "children": [
        "/auth/forgort-password",
        "/auth/signup",
        "/auth/"
      ]
    },
    "/profile": {
      "filePath": "profile/layout.tsx",
      "children": [
        "/profile/",
        "/profile/account/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/auth/forgort-password": {
      "filePath": "auth/forgort-password.tsx",
      "parent": "/auth"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx",
      "parent": "/auth"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx",
      "parent": "/auth"
    },
    "/frens/": {
      "filePath": "frens/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx",
      "parent": "/profile"
    },
    "/profile/account/": {
      "filePath": "profile/account/index.tsx",
      "parent": "/profile"
    }
  }
}
ROUTE_MANIFEST_END */
